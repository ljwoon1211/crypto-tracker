{"version":3,"file":"static/js/292.be84e4ff.chunk.js","mappings":"mMAMe,SAASA,IACtB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,MAEb,UAAEC,EAAS,KAAEC,EAAI,MAAEC,IAAUC,EAAAA,EAAAA,GAAwB,CACzDC,SAAU,CAAC,QAAQN,GACnBO,QAASA,KAAMC,EAAAA,EAAAA,IAAiBR,KAIlC,GAAIE,EACF,OAAOO,EAAAA,EAAAA,KAAA,KAAAC,SAAG,qBAGZ,GAAIN,EACF,OAAOK,EAAAA,EAAAA,KAAA,KAAAC,SAAG,wBAGZ,GAAS,OAAJP,QAAI,IAAJA,IAAAA,EAAMQ,OACT,OAAOF,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uBAGZ,MAAME,EAAS,CAAC,CACdC,KAAM,QACNV,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMW,KAAIC,IAA6C,IAA5C,WAAEC,EAAU,KAAEC,EAAI,IAAEC,EAAG,KAAEC,EAAI,MAAEC,GAAOL,EACrD,MAAO,CACLM,EAAGL,EACHM,EAAG,CAACH,EAAKF,EAAMC,EAAIE,GACpB,MAIL,OACEX,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACc,EAAAA,EAAc,CACbX,OAAQA,EACRY,KAAK,cACLC,QAAS,CACPC,MAAO,CACLC,KAAM,QAERC,MAAO,CACLC,OAAQ,IACRL,KAAM,cACNM,WAAY,eAEdC,KAAM,CAAEC,MAAM,GAKdC,MAAO,CACLD,MAAM,GAERE,MAAO,CACLC,WAAY,CAAEH,MAAM,GACpBI,UAAW,CAAEJ,MAAM,GACnBK,OAAQ,CAAEL,MAAM,GAChBR,KAAM,WACNc,WAAgB,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAMW,KAAKyB,GAAUA,EAAMvB,cAEzCwB,YAAa,CACXC,YAAa,CACXC,OAAQ,CACNC,OAAQ,UACRC,SAAU,aAIhBC,QAAS,CACPvB,EAAG,CACDwB,UAAYC,GAAU,IAAIA,EAAMC,QAAQ,WAOtD,C,6DCnFA,MAAMC,EAAW,iCACXC,EAAuB,4CAEtBC,eAAeC,IACpB,OAAOC,MAAM,GAAGJ,WAAkBK,MAAMC,GAAQA,EAAIC,QACtD,CAEOL,eAAeM,EAAczD,GAClC,OAAOqD,MAAM,GAAGJ,WAAkBjD,KAAUsD,MAAMC,GAAQA,EAAIC,QAChE,CAEOL,eAAeO,EAAgB1D,GACpC,OAAOqD,MAAM,GAAGJ,aAAoBjD,KAAUsD,MAAMC,GAAQA,EAAIC,QAClE,CAIOL,eAAe3C,EAAiBR,GAErC,OAAOqD,MAAM,GAAGH,YAA+BlD,KAAUsD,MAAMC,GAAQA,EAAIC,QAC7E,C","sources":["pages/Price.tsx","services/api.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport React from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { IHistorical } from \"./Chart\";\nimport { fetchCoinHistory } from \"../services/api\";\nimport ReactApexChart from \"react-apexcharts\";\nexport default function Price(){\n  const { coinId } = useParams<{ coinId: string }>();\n\n  const { isLoading, data, error } = useQuery<IHistorical[]>({\n    queryKey: [\"ohlck\",coinId], \n    queryFn: () => fetchCoinHistory(coinId),\n    // refetchInterval: 10 * 1000  \n  })\n\n  if (isLoading) {\n    return <p>Loading chart...</p>;\n  }\n\n  if (error) {\n    return <p>Error loading data.</p>;\n  }\n\n  if (!data?.length) {\n    return <p>No data available.</p>;\n  }\n\n  const series = [{\n    name: \"Price\",\n    data: data?.map(({ time_close, high, low, open, close }) => {\n      return { \n        x: time_close, \n        y: [open,high, low,close] \n      };\n    })\n  }];\n\n  return (\n    <div>\n      <ReactApexChart\n        series={series}\n        type=\"candlestick\"\n        options={{\n          theme: {\n            mode: \"dark\",\n          },\n          chart: {\n            height: 300,\n            type: \"candlestick\",\n            background: \"transparent\",\n          },\n          grid: { show: false },\n          // stroke: {\n          //   curve: \"smooth\",\n          //   width: 4,\n          // },\n          yaxis: {\n            show: false,\n          },\n          xaxis: {\n            axisBorder: { show: false },\n            axisTicks: { show: false },\n            labels: { show: false },\n            type: \"datetime\",\n            categories: data?.map((price) => price.time_close),\n          },\n          plotOptions: {\n            candlestick: {\n              colors: {\n                upward: '#3C90EB',\n                downward: '#DF7D46'\n              }\n            }\n          },\n          tooltip: {\n            y: {\n              formatter: (value) => `$${value.toFixed(2)}`,\n            },\n          },\n        }}\n      />\n    </div>\n  );\n}","const BASE_URL = `https://api.coinpaprika.com/v1`\nconst BASE_URL_nomadcoders = `https://ohlcv-api.nomadcoders.workers.dev`\n\nexport async function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((res) => res.json())\n}\n\nexport async function fetchCoinInfo(coinId?: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((res) => res.json())\n}\n\nexport async function fetchTickerInfo(coinId?: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((res) => res.json())\n}\n\n// https://ohlcv-api.nomadcoders.workers.dev?coinId=btc-bitcoin\n\nexport async function fetchCoinHistory(coinId?: string) {\n\n  return fetch(`${BASE_URL_nomadcoders}?coinId=${coinId}`).then((res) => res.json())\n}"],"names":["Price","coinId","useParams","isLoading","data","error","useQuery","queryKey","queryFn","fetchCoinHistory","_jsx","children","length","series","name","map","_ref","time_close","high","low","open","close","x","y","ReactApexChart","type","options","theme","mode","chart","height","background","grid","show","yaxis","xaxis","axisBorder","axisTicks","labels","categories","price","plotOptions","candlestick","colors","upward","downward","tooltip","formatter","value","toFixed","BASE_URL","BASE_URL_nomadcoders","async","fetchCoins","fetch","then","res","json","fetchCoinInfo","fetchTickerInfo"],"sourceRoot":""}